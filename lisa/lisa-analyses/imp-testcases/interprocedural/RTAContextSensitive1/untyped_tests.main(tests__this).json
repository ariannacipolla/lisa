{"name":"untyped tests::main(tests* this)","description":null,"nodes":[{"id":0,"subNodes":[1,2],"text":"a = new A()"},{"id":1,"text":"a"},{"id":2,"text":"new A()"},{"id":3,"subNodes":[4,5],"text":"one = getOne(a)"},{"id":4,"text":"one"},{"id":5,"subNodes":[6],"text":"getOne(a)"},{"id":6,"text":"a"},{"id":7,"subNodes":[8,9],"text":"positive1 = getPositive(a, one)"},{"id":8,"text":"positive1"},{"id":9,"subNodes":[10,11],"text":"getPositive(a, one)"},{"id":10,"text":"a"},{"id":11,"text":"one"},{"id":12,"subNodes":[13,14],"text":"positive2 = getPositive(a, -1)"},{"id":13,"text":"positive2"},{"id":14,"subNodes":[15,16],"text":"getPositive(a, -1)"},{"id":15,"text":"a"},{"id":16,"text":"-1"},{"id":17,"text":"ret"}],"edges":[{"sourceId":0,"destId":3,"kind":"SequentialEdge"},{"sourceId":3,"destId":7,"kind":"SequentialEdge"},{"sourceId":7,"destId":12,"kind":"SequentialEdge"},{"sourceId":12,"destId":17,"kind":"SequentialEdge"}],"descriptions":[{"nodeId":0,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"this":["tests*"]},"stack":["A*"]},"value":{"map":"empty","stack":"_|_"}}}},{"nodeId":1,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"map":{"heap[w]:heap":["A"],"this":["tests*"]},"stack":"#TOP#"},"value":{"map":"empty","stack":"_|_"}}}},{"nodeId":2,"description":{"expressions":["ref$new A"],"state":{"heap":"monolith","type":{"map":{"heap[w]:heap":["A"],"this":["tests*"]},"stack":["A*"]},"value":{"map":"empty","stack":"_|_"}}}},{"nodeId":3,"description":{"expressions":["one"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"stack":["int32"]},"value":{"map":{"one":"+"},"stack":"+"}}}},{"nodeId":4,"description":{"expressions":["one"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':24:24":["int32"],"heap[w]:heap":["A"],"this":["tests*"]},"stack":"#TOP#"},"value":{"map":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':24:24":"+"},"stack":"_|_"}}}},{"nodeId":5,"description":{"expressions":["call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':24:24"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':24:24":["int32"],"heap[w]:heap":["A"],"this":["tests*"]},"stack":["int32"]},"value":{"map":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':24:24":"+"},"stack":"+"}}}},{"nodeId":6,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"this":["tests*"]},"stack":["A*"]},"value":{"map":"empty","stack":"_|_"}}}},{"nodeId":7,"description":{"expressions":["positive1"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"positive1":["int32"],"this":["tests*"]},"stack":["int32"]},"value":{"map":{"one":"+","positive1":"+"},"stack":"+"}}}},{"nodeId":8,"description":{"expressions":["positive1"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':25:38":["int32"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"stack":"#TOP#"},"value":{"map":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':25:38":"+","one":"+"},"stack":"_|_"}}}},{"nodeId":9,"description":{"expressions":["call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':25:38"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':25:38":["int32"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"stack":["int32"]},"value":{"map":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':25:38":"+","one":"+"},"stack":"+"}}}},{"nodeId":10,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"stack":["A*"]},"value":{"map":{"one":"+"},"stack":"_|_"}}}},{"nodeId":11,"description":{"expressions":["one"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"stack":["int32"]},"value":{"map":{"one":"+"},"stack":"+"}}}},{"nodeId":12,"description":{"expressions":["positive2"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"positive1":["int32"],"positive2":["int32"],"this":["tests*"]},"stack":["int32"]},"value":{"map":{"one":"+","positive1":"+","positive2":"+"},"stack":"+"}}}},{"nodeId":13,"description":{"expressions":["positive2"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':26:37":["int32"],"heap[w]:heap":["A"],"one":["int32"],"positive1":["int32"],"this":["tests*"]},"stack":"#TOP#"},"value":{"map":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':26:37":"+","one":"+","positive1":"+"},"stack":"_|_"}}}},{"nodeId":14,"description":{"expressions":["call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':26:37"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':26:37":["int32"],"heap[w]:heap":["A"],"one":["int32"],"positive1":["int32"],"this":["tests*"]},"stack":["int32"]},"value":{"map":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive1.imp':26:37":"+","one":"+","positive1":"+"},"stack":"+"}}}},{"nodeId":15,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"positive1":["int32"],"this":["tests*"]},"stack":["A*"]},"value":{"map":{"one":"+","positive1":"+"},"stack":"_|_"}}}},{"nodeId":16,"description":{"expressions":["-1"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"positive1":["int32"],"this":["tests*"]},"stack":["int32"]},"value":{"map":{"one":"+","positive1":"+"},"stack":"-"}}}},{"nodeId":17,"description":{"expressions":["skip"],"state":{"heap":"monolith","type":{"map":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"positive1":["int32"],"positive2":["int32"],"this":["tests*"]},"stack":"_|_"},"value":{"map":{"one":"+","positive1":"+","positive2":"+"},"stack":"_|_"}}}}]}